@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Ticket</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayName("Assigned To")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AssignedToUser.FirstName)
        </dd>

        <dt>
            @Html.DisplayName("Ticket Owner")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OwnerUser.FirstName)
        </dd>

        <dt>
            @Html.DisplayName("Project")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Project.Name)
        </dd>

        <dt>
            @Html.DisplayName("Priority")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketPriority.Name)
        </dd>

        <dt>
            @Html.DisplayName("Status")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketStatus.Name)
        </dd>

        <dt>
            @Html.DisplayName("Type")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketType.Name)
        </dd>

        <dt>
            @Html.DisplayName("Title")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayName("Description")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayName("Created")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Created)
        </dd>

        <dt>
            @Html.DisplayName("Updated")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Updated)
        </dd>

    </dl>
</div>

<div class="card card-chat">
    <div class="card-header">
        <h4 class="card-title">Comments</h4>
        <p class="category"></p>
    </div>
    <div class="card-content">
        <ol class="chat">
            @foreach (var comment in Model.Comments)
            {
                <li class="other">
                    <div class="avatar">
                        <img src="~/Assets/assets/img/faces/face-2.jpg" alt="crash" />
                    </div>
                    <div class="msg">
                        <p>
                            @comment.Comment
                        </p>
                        <div class="card-footer">
                            <i class="ti-check"></i>
                            <h6>@comment.Created</h6>
                        </div>
                        <div>
                            @Html.ActionLink("Edit", "Edit", "TicketComments", new { id = comment.Id }, null)
                            <span>|</span>
                            @Html.ActionLink("Delete", "Delete", "TicketComments", new { id = comment.Id }, null)
                        </div>
                    </div>
                </li>
            }
        </ol>
        <hr>
        <div class="send-message">
            @using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
            {
                if (User.Identity.IsAuthenticated)
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("TicketId", Model.Id)
                    <div class="avatar">
                        <img src="~/Assets/assets/img/faces/face-2.jpg" alt="crash" />
                    </div>
                    <input class="form-control textarea" type="text" placeholder="Type here!" name="Comment" />

                    <div class="send-button">
                        <button class="btn btn-primary btn-fill" type="submit">Send</button>
                    </div>
                }
                else
                {
                    <p>You must log in to leave a comment.</p>
                }
            }
        </div>
    </div>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>

@*<script type="text/javascript">
            $(document).ready(function(){
                demo.initStatsDashboard();
                demo.initVectorMap();
                demo.initCirclePercentage();

            });
    </script>*@
